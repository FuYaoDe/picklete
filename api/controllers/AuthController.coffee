###*
# Authentication Controller
#
# This is merely meant as an example of how your Authentication controller
# should look. It currently includes the minimum amount of functionality for
# the basics of Passport.js to work.
###

AuthController =
  login: (req, res) ->
    # Render the `auth/login.ext` view
    res.view
      errors: req.flash('error')
    return
  logout: (req, res) ->
    req.logout()
    # mark the user as logged out for auth purposes
    req.session.authenticated = false
    res.redirect '/'
    return
  register: (req, res) ->
    res.view
      errors: req.flash('error')
    return
  provider: (req, res) ->
    passport.endpoint req, res
    return
  callback: (req, res) ->

    tryAgain = (err) ->
      # Only certain error messages are returned via req.flash('error', someError)
      # because we shouldn't expose internal authorization errors to the user.
      # We do return a generic error and the original request body.
      flashError = req.flash('error')[0]
      if err and !flashError
        req.flash 'error', 'Error.Passport.Generic'
      else if flashError
        req.flash 'error', flashError
      req.flash 'form', req.body
      # If an error was thrown, redirect the user to the
      # login, register or disconnect action initiator view.
      # These views should take care of rendering the error messages.
      action = req.param('action')
      switch action
        when 'register'
          res.redirect '/register'
        when 'disconnect'
          res.redirect 'back'
        else
          res.redirect '/login'
      return

    passport.callback req, res, (err, user, challenges, statuses) ->
      if err or !user
        return tryAgain(challenges)
      req.login user, (err) ->

        if err
          return tryAgain(err)
        # Mark the session as authenticated to work with default Sails sessionAuth.js policy
        req.session.authenticated = true
        # Upon successful login, send the user to the homepage were req.user
        # will be available.
        res.redirect '/'
        return
      return
    return
  disconnect: (req, res) ->
    passport.disconnect req, res
    return
module.exports = AuthController

# ---
# generated by js2coffee 2.0.3
